#N canvas 4 61 1421 775 10;
#X obj 292 281 i;
#X obj 292 573 i;
#X text 553 435 get the length and apply it;
#X text 1014 395 attack level: 0-1 float \, mark an attack when this
threshold is passed;
#X text 1043 441 rest level: 0-1 float \, re-arm the attack detect
after the signal goes below this level. There is no rest mark \, the
analyzer simply chunks the sample until the next attack;
#X text 1015 495 wait time: number of 'windows' integer \, is the minimum
time the analyzer waits to look for a rest. this allows complex sounds
to be captured more accurately;
#X text 1016 549 window size: number of samples in integers \, how
big of a chunk the analyzer takes to analyze. the chunk is simply added
together to get a crude 'volume' of the sample. to follow the logic
of the program its good to keep this number a power of 2;
#X text 1019 633 if you want to change the way the anayzer works \,
fool around with these four numbers \, delete and replace them in the
message box and on start-up of the patch they will be saved.;
#X obj 255 18 inlet;
#X text 294 17 analyze trigger;
#X text 1017 40 Arg1: Attack Level;
#X text 1017 60 Arg2: Rest Level;
#X text 1018 80 Arg3: Wait time for next attack;
#X obj 292 259 / \$4;
#X obj 292 551 * \$4;
#X obj 292 157 f;
#X obj 542 454 s \$0-set-sample-lengther;
#X obj 341 531 r \$0-window-size;
#X obj 313 236 r \$0-window-size;
#X obj 287 65 t b;
#X obj 311 124 s \$0-window-size;
#X obj 362 102 s \$0-att-level;
#X obj 419 78 s \$0-rest-level;
#X obj 449 127 s \$0-wait-time;
#X obj 540 79 t b;
#X text 1021 124 Arg5: name of array to analyze;
#X text 1018 100 Arg4: window size (in samples);
#X obj 256 39 route sampLength reTrigger winSize att rest wait init
rePoint, f 64;
#N canvas 4 50 450 300 init 0;
#X obj 37 37 inlet;
#X obj 40 150 f \$1;
#X obj 40 171 s \$0-att-level;
#X obj 70 99 f \$2;
#X obj 70 120 s \$0-rest-level;
#X obj 137 171 s \$0-wait-time;
#X obj 137 150 f \$3;
#X obj 181 111 f \$4;
#X obj 181 132 s \$0-window-size;
#X obj 230 77 s \$0-init;
#X obj 40 72 t b b b b b, f 23;
#X connect 0 0 10 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 10 0 1 0;
#X connect 10 1 3 0;
#X connect 10 2 6 0;
#X connect 10 3 7 0;
#X connect 10 4 9 0;
#X restore 540 100 pd init;
#X obj 606 84 s \$0-reP;
#N canvas 471 64 1445 918 threshold 0;
#X obj 279 83 t f f, f 52;
#X obj 588 118 t f b;
#X obj 228 803 pack, f 9;
#X obj 228 776 swap, f 9;
#X obj 279 30 inlet;
#X obj 1128 24 inlet;
#X obj 1045 23 inlet;
#X obj 804 118 r \$0-wait-time;
#N canvas 15 50 799 645 wait 0;
#X obj 306 266 + 1;
#X msg 411 195 0;
#X obj 271 216 spigot 0;
#X obj 271 360 t b b;
#X msg 425 268 0;
#X obj 271 31 inlet;
#X msg 384 147 1;
#X obj 271 266 f 0;
#X text 582 220 how long to wait;
#X text 329 270 count;
#X obj 554 129 inlet;
#X obj 384 53 inlet;
#X text 429 52 start;
#X obj 533 222 - 1;
#X text 311 26 bang count;
#X obj 271 52 t b;
#X obj 384 74 route start reset;
#X msg 467 146 0;
#X obj 533 193 f \$3;
#X obj 384 125 t b b b;
#X obj 440 126 t b b b;
#X obj 271 318 sel, f 34;
#X obj 270 386 f 1;
#X obj 270 407 s \$0-rest-mute;
#X connect 0 0 7 1;
#X connect 1 0 7 1;
#X connect 2 0 7 0;
#X connect 3 0 22 0;
#X connect 3 1 4 0;
#X connect 4 0 2 1;
#X connect 5 0 15 0;
#X connect 6 0 2 1;
#X connect 7 0 0 0;
#X connect 7 0 21 0;
#X connect 10 0 18 1;
#X connect 11 0 16 0;
#X connect 13 0 21 1;
#X connect 15 0 2 0;
#X connect 16 0 19 0;
#X connect 16 1 20 0;
#X connect 17 0 2 1;
#X connect 18 0 13 0;
#X connect 19 0 6 0;
#X connect 19 1 1 0;
#X connect 19 2 18 0;
#X connect 20 0 1 0;
#X connect 20 1 17 0;
#X connect 20 2 18 0;
#X connect 21 0 3 0;
#X connect 22 0 23 0;
#X restore 633 151 pd wait in amount of windows;
#X f 29;
#X text 1171 25 reset;
#X obj 459 799 list prepend symbol;
#X obj 459 820 list trim;
#X obj 459 734 r \$0-reP;
#X msg 459 755 \$1-chunks;
#X text 335 28 Highest amplitude point;
#X obj 1128 70 s \$0-reset;
#X obj 644 67 r \$0-reset;
#X obj 279 134 spigot 1;
#X obj 279 235 > \$1, f 12;
#X text 357 236 if greater than arg1(attack level);
#X obj 279 266 sel 1;
#X obj 588 259 spigot 0;
#X text 730 46 starts wait time;
#X obj 348 208 r \$0-att-level;
#X text 635 350 then...;
#X text 316 270 then ...;
#X text 665 171 after wait then detect for rest;
#X obj 296 403 s \$0-start-rest-wait;
#X obj 718 26 r \$0-start-rest-wait;
#X obj 324 110 r \$0-att-mute;
#X obj 330 337 s \$0-att-mute;
#X obj 330 314 f 0;
#X obj 1045 45 v \$0-place;
#X obj 279 426 v \$0-place;
#X text 349 426 place in samples;
#X text 362 315 stop listening for an attack;
#X obj 633 216 r \$0-rest-mute;
#X obj 651 433 s \$0-rest-mute;
#X obj 651 405 f 0;
#X obj 619 479 s \$0-att-mute;
#X text 651 457 start listening for an attack;
#X obj 619 456 f 1;
#X obj 588 381 t b b b, f 11;
#X obj 588 502 v \$0-place;
#X text 658 503 get rest place in samples;
#X obj 588 659 -, f 8;
#X text 626 622 calculate length;
#X obj 294 560 r \$0-set-sample-lengther;
#X obj 279 587 /;
#X text 291 545 divide by length to get 0-1 floating point;
#X obj 651 527 r \$0-window-size;
#X obj 228 824 t a b;
#X obj 358 792 r \$0-reset;
#X obj 343 848 f 0;
#X obj 376 847 + 1;
#X obj 358 813 f 0;
#X obj 924 495 r \$0-look-up-over;
#X text 1035 496 always trigger rest at end of sample \, either for
cut off sound or if it is a sustain the entire sample;
#X obj 588 582 +, f 11;
#X obj 703 721 r \$0-reset;
#X obj 703 763 f 0;
#X obj 127 559 r \$0-reset;
#X obj 127 580 t b;
#X obj 127 601 f 0;
#X text 660 582 add a 4 windows to get full rest;
#X obj 644 88 t b;
#X msg 644 109 reset;
#X msg 718 88 start;
#X obj 279 287 t b b b b;
#X obj 1007 142 r \$0-reset;
#X obj 1007 223 f 0;
#X obj 279 516 max 0;
#X obj 228 882 text insert \$5-temp, f 39;
#X obj 651 548 * 2;
#X obj 162 216 r \$0-1st-bang;
#X text 640 316 if less than arg2 (rest value) or greater than last
attack;
#N canvas 4 50 450 301 if.. 0;
#X obj 36 13 inlet;
#X obj 99 106 r \$0-rest-level;
#X obj 36 132 < \$2, f 11;
#X obj 36 34 t a a, f 31;
#X obj 250 110 v \$0-latest-att-level;
#X obj 274 29 inlet;
#X text 320 29 update attack level;
#X obj 235 175 sel 1;
#X obj 36 153 sel 1;
#X obj 36 174 outlet;
#X obj 235 196 outlet;
#X obj 274 50 t b;
#X obj 235 154 >=;
#X obj 314 164 r \$0-reset;
#X obj 314 185 f 1;
#X obj 250 131 + 0.05;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 2 0 8 0;
#X connect 3 0 2 0;
#X connect 3 1 12 0;
#X connect 4 0 15 0;
#X connect 5 0 11 0;
#X connect 7 0 10 0;
#X connect 8 0 9 0;
#X connect 11 0 4 0;
#X connect 12 0 7 0;
#X connect 13 0 14 0;
#X connect 14 0 12 1;
#X connect 15 0 12 1;
#X restore 588 317 pd if..;
#X obj 279 155 t a a;
#X obj 306 178 v \$0-latest-att-level;
#X obj 313 364 s \$0-bang-2-if;
#X obj 627 293 r \$0-bang-2-if;
#X obj 588 683 min 1;
#X obj 588 704 max 0;
#X obj 924 547 spigot 0;
#X obj 969 524 r \$0-rest-mute;
#X obj 924 571 t b b;
#X obj 951 623 s \$0-rest-mute;
#X obj 951 595 f 0;
#X obj 603 603 r \$0-set-sample-lengther;
#X obj 588 630 /;
#X obj 279 654 t f f;
#X text 330 663 send value for calculating length;
#X obj 924 592 f 1;
#X obj 1128 45 t b;
#X obj 1007 244 s \$0-rest-mute;
#X obj 1007 163 t b b;
#X obj 1034 211 s \$0-att-mute;
#X obj 1034 188 f 1;
#X obj 58 366 r \$0-window-size;
#X obj -5 411 - \$4, f 11;
#X text 67 411 back up to capture the full attack;
#N canvas 4 50 752 504 round 0;
#X obj 42 19 inlet;
#X obj 42 220 outlet;
#X obj 42 98 * 32;
#X obj 42 145 i;
#X obj 42 119 + 0.4999;
#X obj 208 140 0.015625;
#X obj 209 120 * 0.03125;
#X obj 42 166 * 0.015625;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 7 0 1 0;
#X restore 343 647 pd round;
#X connect 0 0 17 0;
#X connect 0 1 1 0;
#X connect 1 0 21 0;
#X connect 1 1 8 0;
#X connect 2 0 51 0;
#X connect 3 0 2 0;
#X connect 3 1 2 1;
#X connect 4 0 0 0;
#X connect 5 0 93 0;
#X connect 6 0 32 0;
#X connect 7 0 8 2;
#X connect 10 0 11 0;
#X connect 11 0 72 2;
#X connect 12 0 13 0;
#X connect 13 0 10 0;
#X connect 16 0 65 0;
#X connect 17 0 77 0;
#X connect 18 0 20 0;
#X connect 20 0 68 0;
#X connect 21 0 76 0;
#X connect 23 0 18 1;
#X connect 28 0 67 0;
#X connect 29 0 17 1;
#X connect 31 0 30 0;
#X connect 33 0 71 0;
#X connect 36 0 21 1;
#X connect 38 0 37 0;
#X connect 41 0 39 0;
#X connect 42 0 43 0;
#X connect 42 1 41 0;
#X connect 42 2 38 0;
#X connect 43 0 58 0;
#X connect 45 0 81 0;
#X connect 47 0 48 1;
#X connect 48 0 90 0;
#X connect 50 0 73 0;
#X connect 51 0 72 0;
#X connect 51 1 53 0;
#X connect 52 0 55 0;
#X connect 53 0 54 0;
#X connect 53 0 72 1;
#X connect 54 0 53 1;
#X connect 55 0 53 1;
#X connect 56 0 83 0;
#X connect 58 0 89 0;
#X connect 59 0 60 0;
#X connect 60 0 45 1;
#X connect 61 0 62 0;
#X connect 62 0 63 0;
#X connect 63 0 3 1;
#X connect 65 0 66 0;
#X connect 66 0 8 1;
#X connect 67 0 8 1;
#X connect 68 0 33 0;
#X connect 68 1 27 0;
#X connect 68 2 79 0;
#X connect 68 3 31 0;
#X connect 69 0 95 0;
#X connect 70 0 94 0;
#X connect 71 0 48 0;
#X connect 73 0 58 1;
#X connect 74 0 68 0;
#X connect 76 0 42 0;
#X connect 77 0 18 0;
#X connect 77 1 78 0;
#X connect 80 0 76 1;
#X connect 81 0 82 0;
#X connect 82 0 3 0;
#X connect 83 0 85 0;
#X connect 84 0 83 1;
#X connect 85 0 92 0;
#X connect 85 1 87 0;
#X connect 87 0 86 0;
#X connect 88 0 89 1;
#X connect 89 0 45 0;
#X connect 90 0 3 1;
#X connect 90 1 45 1;
#X connect 92 0 45 0;
#X connect 93 0 15 0;
#X connect 95 0 70 0;
#X connect 95 1 97 0;
#X connect 97 0 96 0;
#X connect 98 0 99 1;
#X restore 292 709 pd threshold new;
#X f 45;
#X msg 820 276 \; \$1-chunks clear;
#X obj 793 224 symbol \$5;
#X obj 292 302 max 1;
#X obj 292 612 t b a a, f 31;
#X obj 292 633 f \$4;
#N canvas 4 50 910 638 chunks-avg-not-expr 0;
#X obj 122 168 f;
#X obj 156 169 + 1;
#X obj 176 145 0;
#X obj 122 146 until;
#X obj 229 149 0;
#X obj 149 400 + 0, f 15;
#X obj 149 421 t f f;
#X obj 120 189 t a a;
#X obj 122 445 sel, f 31;
#X obj 286 155 - 1;
#X obj 122 472 f;
#X obj 122 542 /, f 37;
#X obj 65 18 inlet;
#X obj 122 584 outlet;
#X obj 630 53 inlet;
#X text 672 52 onset;
#X text 103 17 chunk size;
#X obj 149 310 tabread \$5;
#X obj 149 331 abs;
#X obj 122 72 t a b b a a, f 37;
#X obj 149 288 + 0, f 57;
#X connect 0 0 1 0;
#X connect 0 0 7 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 0 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 6 0 5 1;
#X connect 6 1 10 1;
#X connect 7 0 8 0;
#X connect 7 1 20 0;
#X connect 8 0 10 0;
#X connect 9 0 8 1;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 12 0 19 0;
#X connect 14 0 20 1;
#X connect 17 0 18 0;
#X connect 18 0 5 0;
#X connect 19 0 3 0;
#X connect 19 1 2 0;
#X connect 19 2 4 0;
#X connect 19 3 9 0;
#X connect 19 4 11 1;
#X connect 20 0 17 0;
#X restore 292 668 pd chunks-avg-not-expr;
#X obj 292 375 cg-timed-uzi 2;
#X obj 292 190 t f b f b b, f 84;
#X text 859 220 clear the text files;
#X obj 793 245 t a a;
#X msg 793 335 \; \$1-temp clear;
#X obj 1138 223 text define \$5-temp;
#X text 1273 222 temp text;
#N canvas 4 50 450 300 bounce-the-text 0;
#X obj 51 10 inlet;
#X obj 51 166 text fromlist \$5-chunks;
#X obj 51 136 text tolist \$5-temp;
#X msg 78 84 \; \$1-chunks clear;
#X obj 51 31 t b b;
#X obj 82 58 symbol \$5;
#X connect 0 0 4 0;
#X connect 2 0 1 0;
#X connect 4 0 2 0;
#X connect 4 1 5 0;
#X connect 5 0 3 0;
#X restore 392 480 pd bounce-the-text;
#X obj 373 414 del 10;
#X obj 412 459 s \$0-look-up-over;
#X obj 373 435 t b b b;
#X obj 373 502 s loop-\$6-update;
#X connect 0 0 33 0;
#X connect 1 0 34 0;
#X connect 8 0 27 0;
#X connect 13 0 0 0;
#X connect 14 0 1 0;
#X connect 15 0 38 0;
#X connect 17 0 14 1;
#X connect 17 0 35 1;
#X connect 18 0 13 1;
#X connect 19 0 15 0;
#X connect 24 0 28 0;
#X connect 27 0 15 0;
#X connect 27 1 19 0;
#X connect 27 2 20 0;
#X connect 27 3 21 0;
#X connect 27 4 22 0;
#X connect 27 5 23 0;
#X connect 27 6 24 0;
#X connect 27 7 29 0;
#X connect 32 0 40 0;
#X connect 33 0 37 0;
#X connect 34 0 35 0;
#X connect 34 1 36 1;
#X connect 34 2 30 1;
#X connect 35 0 36 0;
#X connect 36 0 30 0;
#X connect 37 0 14 0;
#X connect 37 1 45 0;
#X connect 38 0 13 0;
#X connect 38 1 30 2;
#X connect 38 2 16 0;
#X connect 38 4 32 0;
#X connect 40 0 41 0;
#X connect 40 1 31 0;
#X connect 45 0 47 0;
#X connect 47 0 48 0;
#X connect 47 1 44 0;
#X connect 47 2 46 0;
